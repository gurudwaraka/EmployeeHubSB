package com.example.employeeHub.service;

import com.example.employeeHub.entity.ProfileEntity;
import com.example.employeeHub.model.ProfileModel;
import com.example.employeeHub.repository.ProfileRepository;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

@Service
public class ProfileServiceImpl implements ProfileService {

    @Autowired
    private ProfileRepository profileRepository ;

    @Override
    public List<ProfileModel> getAllProfiles() {
        // Fetch the list of ProfileEntity objects from the repository
        List<ProfileEntity> profileEntities = profileRepository.findAll();

        // Convert the list of ProfileEntity objects to a list of ProfileModel objects
        return profileEntities.stream()
                              .map(ProfileEntity::toModel)
                              .collect(Collectors.toList());
    }

    @Override
    public Optional<ProfileModel> getProfileById(Long id) {
    	
    	
    	Optional<ProfileEntity> profile=profileRepository.findById(id);
    
    	return profile.map(ProfileEntity::toModel);
    }

    @Override
    public ProfileModel createProfile(ProfileModel employeeProfile) {
        // Check if a profile with the same email already exists
        Optional<ProfileEntity> existingProfile = profileRepository.findByEmail(employeeProfile.getEmail());
        
        if (existingProfile.isPresent()) {
            // Return null or throw an exception, or handle this case according to your business logic
            throw new IllegalArgumentException("Profile with the same email already exists.");
        }
        
        // Convert the ProfileModel to ProfileEntity
        ProfileEntity profileEntity = employeeProfile.toEntity();
        
        // Ensure the ID is null so that a new one is generated by the database
        profileEntity.setId(null);
        
        // Save the entity to the repository, which will generate a new ID
        ProfileEntity savedEntity = profileRepository.save(profileEntity);
        
        // Convert the saved entity back to ProfileModel and return it
        return savedEntity.toModel();
    }
    
    @Override
    public String getPasswordByEmail(String email) {
        return profileRepository.findPasswordByEmail(email);
    }

    @Override
    public Optional<ProfileModel> updateProfile(Long id, ProfileModel employeeProfile) {
        return profileRepository.findById(id).map(existingProfile -> {
            existingProfile.setFirstName(employeeProfile.getFirstName());
            existingProfile.setLastName(employeeProfile.getLastName());
            existingProfile.setEmail(employeeProfile.getEmail());
            existingProfile.setPassword(employeeProfile.getPassword());
            existingProfile.setPhoneNumber(employeeProfile.getPhoneNumber());
            existingProfile.setJobRole(employeeProfile.getJobRole());
            existingProfile.setManagerId(employeeProfile.getManagerId());
            existingProfile.setLastUpdated(employeeProfile.getLastUpdated());
            existingProfile.setLastModifiedBy(employeeProfile.getLastModifiedBy());
            existingProfile.setImage(employeeProfile.getImage());
            
            // Save the updated entity
            ProfileEntity updatedProfile = profileRepository.save(existingProfile);
            
            // Convert the updated entity to model and return
            return updatedProfile.toModel();
        });
    }


    @Override
    public boolean deleteProfile(Long id) {
        return profileRepository.findById(id).map(profile -> {
            profileRepository.delete(profile);
            return true;
        }).orElse(false);
    }
    
    @Override
    public List<Long> getAllEIds() {
        // Fetch the list of all profile IDs from the repository
        return profileRepository.findAllEIds();
    }

	@Override
	public List<Long> getAllMIds() {
		// TODO Auto-generated method stub
		return profileRepository.findAllMIds();
	}

	@Override
	public List<Long> getEByManager(Long id) {
		// TODO Auto-generated method stub
		return profileRepository.getEByManager(id);
	}


}
